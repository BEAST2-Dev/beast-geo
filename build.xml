<!-- Build GEO. It is also used by Hudson GEO project. JUnit test is available for this build. -->
<project basedir="." default="build_jar_all_GEO" name="BUILD_GEO">
	<description>
	    Build GEO. 
            Also used by Hudson GEO project. 
	    JUnit test is available for this build.
	    $Id: build_GEO.xml $
	</description>

	<!-- set global properties for this build -->
	<property name="GEO_DIR" location="../beast-geo" />
	<property name="srcGEO" location="${GEO_DIR}/src" />
	<property name="buildGEO" location="${GEO_DIR}/build" />
	<property name="libGEO" location="${GEO_DIR}/lib" />
	<property name="release_dir" value="${GEO_DIR}/release" />
	<property name="distGEO" location="${buildGEO}/dist" />
	<property name="beast2path" location="../beast2" />
	<property name="libBeast2" location="${beast2path}/lib" />
	<property name="srcBeast2" location="${beast2path}/src" />
	<property name="beast_classic_path" location="../beast-classic/build" />
	<property name="beast2classpath" location="${beast2path}/build" />
    <property name="beastappclasspath" location="../BeastFX/build" />
    <property name="BEASTLabsclasspath" location="../BEASTLabs/build" />
 	<property name="Add_on_dir" value="${release_dir}/add-on" />

    <import file="${beast2path}/build.xml" />

	<property name="main_class_BEAST" value="beast.app.BeastMCMC" />
	<property name="report" value="${buildGEO}/junitreport"/>

	<path id="classpath">
   		<pathelement path="${buildGEO}"/>
   		<fileset dir="${libGEO}" includes="jts-1.8.jar"/>
   		<fileset dir="${libGEO}" includes="jump-core-1.2.jar"/>
   		<fileset dir="${libGEO}" includes="jump-workbench-1.2.jar"/>
   		<fileset dir="${libGEO}" includes="Jama-1.0.1.jar"/>
   		<fileset dir="${libGEO}" includes="jdom.jar"/>
   		<fileset dir="${libGEO}" includes="xerces.jar"/>

        <fileset dir="${libBeast2}" includes="antlr-runtime-4.10.1.jar"/>
        <fileset dir="${libBeast2}" includes="beagle.jar"/> 
        <fileset dir="${libBeast2}" includes="colt.jar"/> 
        <fileset dir="${libBeast2}" includes="jam.jar"/>
		<fileset dir="${libBeast2}" includes="commons-math3-3.6.1.jar"/>

		<pathelement path="${beast2classpath}"/>
		<pathelement path="${beastappclasspath}"/>
		<pathelement path="${BEASTLabsclasspath}"/>
	</path>

	<!-- start -->
	<target name="initGEO">
		<echo message="${ant.project.name}: ${ant.file}" />
		<available file="${GEO_DIR}/version.xml" property="versionAvailable"/>
        <fail unless="versionAvailable">
              ** Required file version.xml does not exist. **
            </fail>

        <!-- Read package name and version from xml file -->
        <xmlproperty file="${GEO_DIR}/version.xml" prefix="fromVersionFile" />
        <property name="GEOversion" value="${fromVersionFile.package(version)}" />
        <property name="projName" value="${fromVersionFile.package(name)}" />
        <property name="projVersion" value="${fromVersionFile.package(version)}" />

	</target>

	<target name="cleanGEO">
    	<delete dir="${buildGEO}" />
	</target>

	<!-- clean previous build, and then compile Java source code, and Juint test -->
	<target name="build_all_GEO" depends="cleanGEO,compile-allGEO,junitGEO"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- clean previous build, compile Java source code, and Junit test, and make the beast.jar and beauti.jar -->
	<target name="build_jar_all_GEO" depends="cleanGEO,compile-allGEO,junitGEO,dist_all_GEO"
        description="Clean and Build all run-time stuff">
	</target>


	<!-- No JUnit Test, clean previous build, compile Java source code, and make the GEO.jar and beauti.jar -->
	<target name="build_jar_all_GEO_NoJUnitTest" depends="cleanGEO,compile-allGEO,dist_all_GEO"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- compile Java source code -->
	<target name="compile-allGEO" depends="initGEO,compile-all">


	    <!-- Capture the path as a delimited property using the refid attribute -->
	    <property name="myclasspath" refid="classpath"/>
	    <!-- Emit the property to the ant console -->
	    <echo message="Classpath = ${myclasspath}"/>

		<mkdir dir="${buildGEO}" />

		<!-- Compile the java code from ${srcGEO} into ${buildGEO} /bin -->
		<javac srcdir="${srcGEO}" destdir="${buildGEO}" classpathref="classpath" 
		       fork="true"
		       memoryinitialsize="256m"
		       memorymaximumsize="256m">
			<include name="sphericalGeo/**" />
			<!-- compile JUnit test classes -->
			<!--
			<include name="test/beast/**" />
		-->
		</javac>
        <copy todir="${buildGEO}">
            <fileset dir="${srcGEO}" includes="**/*.properties" />
            <fileset dir="${srcGEO}" includes="**/*.png" />
        </copy>
		<echo message="Successfully compiled." />
	</target>

	<!-- make the beast.jar and beauti.jar -->
	<target name="dist_all_GEO" depends="compile-allGEO" description="create GEO jar">
		<!-- Create the distribution directory -->
		<mkdir dir="${distGEO}" />

		<jar jarfile="${distGEO}/GEO.src.jar">
			<fileset dir="${srcGEO}">
				<include name="**/*.java" />
				<include name="beast/**/*.png" />
				<include name="beast/**/*.xsl" />
			</fileset>
        </jar>
		<jar jarfile="${distGEO}/GEO.package.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
			<fileset dir="${buildGEO}">
				<include name="**/*.class" />
				<include name="**/*.png" />
				<include name="**/*.properties" />
			</fileset>
		</jar>
	</target>

	<!-- run beast.jar -->
	<target name="run_GEO">
		<java jar="${distGEO}/GEO.jar" fork="true" />
	</target>

	
	<!-- JUnit test -->
	<target name="junitGEO">
		<mkdir dir="${report}" />
		<junit printsummary="yes"> <!--showoutput='yes'-->
			<classpath>
				<path refid="classpath" />
				<path location="${buildGEO}" />
			</classpath>

			<formatter type="xml" />

			<batchtest fork="yes" todir="${report}">
				<fileset dir="${srcGEO}">
                    <include name="test/**/*Test.java"/>                                         
				</fileset>
				<fileset dir="${srcBeast2}">
                    <include name="test/beast/integration/**/*Test.java"/>                                         
                    <exclude name="test/beast/integration/**/ResumeTest.java"/>                                         
				</fileset>
			</batchtest>
		</junit>
		<echo message="JUnit test finished." />
	</target>
    
    <target name="junitreport">
		<junitreport todir="${report}">
			<fileset dir="${report}" includes="*.xml"/>
			<report format="frames" todir="${report}"/>
		</junitreport>
		<echo message="JUnit test report finished." />
	</target>

	<target name="addon" depends="package"/>

	<target name="package"
	        depends="build_jar_all_GEO_NoJUnitTest"
	        description="release BEAST 2 add-on version of GEO">

        <property name="fullName" value="${projName}.v${projVersion}"/>

		<delete dir="${Add_on_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Add_on_dir}" />
		<mkdir dir="${Add_on_dir}/doc" />
		<mkdir dir="${Add_on_dir}/lib" />
		<mkdir dir="${Add_on_dir}/examples" />
		<mkdir dir="${Add_on_dir}/examples/nexus" />
		<mkdir dir="${Add_on_dir}/fxtemplates" />

		<copy todir="${Add_on_dir}">
			<fileset file="version.xml"/>
		</copy>
		<copy todir="${Add_on_dir}/examples">
			<fileset dir="examples" />
		</copy>
		<copy todir="${Add_on_dir}/examples/nexus">
			<fileset dir="examples/nexus" />
		</copy>
		<copy todir="${Add_on_dir}/fxtemplates">
			<fileset dir="fxtemplates" />
		</copy>
		<copy todir="${Add_on_dir}/lib">
			<fileset dir="lib" />
		</copy>
		<copy todir="${Add_on_dir}/lib">
			<fileset dir="${distGEO}" includes="GEO.package.jar" />
		</copy>
		<!--
        <copy todir="${Add_on_dir}/doc">
			<fileset dir="doc/tutorial" includes="phylogeography_s.pdf" />
		</copy>
		-->
		<copy todir="${Add_on_dir}">
			<fileset dir="${distGEO}" includes="GEO.src.jar" />
		</copy>
		<copy todir="${Add_on_dir}/fxtemplates">
			<fileset file="fxtemplates/GEO.xml" />
			<fileset file="fxtemplates/AutoPartition.xml" />
		</copy>

		<jar jarfile="${dist}/${fullName}.zip">
			<fileset dir="${Add_on_dir}">
				<include name="**/*" />
			</fileset>
        </jar>
        
		<echo>** Package ${dist}/${fullName}.zip created successfuly! **</echo>
	</target>





        <condition property="isWindows"><os family="windows" /></condition>
        <condition property="isLinux"><and><os family="unix"/><not><os family="mac"/></not></and></condition>
        <condition property="isMac"><os family="mac" /></condition>

        <target name="installLinux" depends="package" if="isLinux">
                <mkdir dir="${user.home}/.beast/2.7/${projName}"/>
                        <unzip src="${dist}/${fullName}.zip" dest="${user.home}/.beast/2.7/${projName}"/>
        </target>

        <target name="installMac" depends="package" if="isMac">
                <mkdir dir="${user.home}/.beast/2.7/${projName}"/>
                        <unzip src="${dist}/${fullName}.zip" dest="${user.home}/Library/Application Support/BEAST/2.7/${projName}"/>
        </target>

        <target name="installWindows" depends="package" if="isWindows">
                <mkdir dir="${user.home}/BEAST/2.7/${projName}"/>
                        <unzip src="${dist}/${fullName}.zip" dest="${user.home}/BEAST/2.7/${projName}"/>
        </target>

        <target name="install" depends="installWindows,installMac,installLinux">
        </target>


</project>
